biigle.$viewModel("label-tree-version-title",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.version"),l=biigle.$require("api.labelTreeVersion");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader")],methods:{deleteVersion:function(){this.startLoading(),l.delete({id:i.id}).then(this.deleteSuccess,this.handleErrorResponse)},deleteSuccess:function(){t.success("The label tree version was deleted. Redirecting..."),setTimeout(function(){location.href=biigle.$require("labelTrees.redirectUrl")},2e3)}}})}),biigle.$viewModel("label-tree-version-toolbar",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.version"),l=biigle.$require("api.labelTreeVersion");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader")],data:{doi:"",doiSaved:!1},computed:{doiUrl:function(){return"https://doi.org/"+this.doi},doiTitle:function(){return"DOI: "+this.doi}},methods:{cleanDoi:function(e){return e.replace(/^https?\:\/\/doi\.org\//,"")},saveDoi:function(){this.doi=this.cleanDoi(this.doi),l.update({id:i.id},{doi:this.doi}).then(this.handleDoiSaved,t.handleErrorResponse)},handleDoiSaved:function(){this.doiSaved=!0}}})}),biigle.$viewModel("label-trees-authorized-projects",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("api.projects"),l=biigle.$require("api.labelTree"),a=biigle.$require("labelTrees.privateVisibilityId");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader"),biigle.$require("core.mixins.editor")],data:{labelTree:biigle.$require("labelTrees.labelTree"),ownProjects:[],authorizedProjects:biigle.$require("labelTrees.authorizedProjects"),authorizedOwnProjects:biigle.$require("labelTrees.authorizedOwnProjects"),typeaheadTemplate:'<span v-text="item.name"></span><br><small v-text="item.description"></small>'},components:{typeahead:biigle.$require("core.components.typeahead")},computed:{isPrivate:function(){return this.labelTree.visibility_id===a},classObject:function(){return{"panel-warning":this.editing}},authorizableProjects:function(){var e=this;return this.ownProjects.filter(function(t){for(var i=e.authorizedProjects.length-1;i>=0;i--)if(e.authorizedProjects[i].id===t.id)return!1;return!0})},hasAuthorizedProjects:function(){return this.authorizedProjects.length>0}},methods:{fetchOwnProjects:function(){var e=this;i.query().then(function(t){Vue.set(e,"ownProjects",t.body)},t.handleErrorResponse)},addAuthorizedProject:function(e){if(e){var i=this;this.startLoading(),l.addAuthorizedProject({id:this.labelTree.id},{id:e.id}).then(function(){i.authorizedProjectAdded(e)},t.handleErrorResponse).finally(this.finishLoading)}},authorizedProjectAdded:function(e){this.authorizedProjects.push(e),this.authorizedOwnProjects.push(e.id)},removeAuthorizedProject:function(e){var i=this;this.startLoading(),l.removeAuthorizedProject({id:this.labelTree.id,project_id:e.id}).then(function(){i.authorizedProjectRemoved(e)},t.handleErrorResponse).finally(this.finishLoading)},authorizedProjectRemoved:function(e){var t;for(t=this.authorizedProjects.length-1;t>=0;t--)this.authorizedProjects[t].id===e.id&&this.authorizedProjects.splice(t,1);-1!==(t=this.authorizedOwnProjects.indexOf(e.id))&&this.authorizedOwnProjects.splice(t,1)},isOwnProject:function(e){return-1!==this.authorizedOwnProjects.indexOf(e.id)}},created:function(){this.$once("editing.start",this.fetchOwnProjects)}})}),biigle.$viewModel("label-trees-labels",function(e){var t=biigle.$require("api.labels"),i=biigle.$require("messages.store"),l=biigle.$require("labelTrees.randomColor"),a=biigle.$require("labelTrees.labelTree"),r=biigle.$require("events");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader"),biigle.$require("core.mixins.editor")],data:{labels:biigle.$require("labelTrees.labels"),selectedColor:l(),selectedLabel:null,selectedName:""},components:{tabs:VueStrap.tabs,tab:VueStrap.tab,labelTree:biigle.$require("labelTrees.components.labelTree"),manualLabelForm:biigle.$require("labelTrees.components.manualLabelForm"),wormsLabelForm:biigle.$require("labelTrees.components.wormsLabelForm")},computed:{classObject:function(){return{"panel-warning":this.editing}}},methods:{saveLabel:function(e,l){this.startLoading(),t.update({id:e.id},{name:e.name,color:e.color}).catch(function(e){l(),i.handleErrorResponse(e)}).finally(this.finishLoading)},deleteLabel:function(e){var l=this;this.startLoading(),t.delete({id:e.id}).then(function(){l.labelDeleted(e)},i.handleErrorResponse).finally(this.finishLoading)},labelDeleted:function(e){this.selectedLabel&&this.selectedLabel.id===e.id&&this.deselectLabel(e);for(var t=this.labels.length-1;t>=0;t--)if(this.labels[t].id===e.id){this.labels.splice(t,1);break}},selectLabel:function(e){this.selectedLabel=e,e?(this.selectedColor="#"+e.color,this.$emit("select",e),r.$emit("selectLabel",e)):(this.$emit("clear"),r.$emit("selectLabel",null))},deselectLabel:function(e){this.selectedLabel=null,this.$emit("deselect",e),r.$emit("selectLabel",null)},selectColor:function(e){this.selectedColor=e},selectName:function(e){this.selectedName=e},insertLabel:function(e){Vue.set(e,"open",!1),Vue.set(e,"selected",!1);for(var t=e.name.toLowerCase(),i=0,l=this.labels.length;i<l;i++)if(this.labels[i].name.toLowerCase()>=t)return void this.labels.splice(i,0,e);this.labels.push(e)},createLabel:function(e){this.loading||(this.startLoading(),t.save({label_tree_id:a.id},e).then(this.labelCreated,i.handleErrorResponse).finally(this.finishLoading))},labelCreated:function(e){e.data.forEach(this.insertLabel),this.selectedColor=l(),this.selectedName=""}}})}),biigle.$viewModel("label-trees-members",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.labelTree"),l=biigle.$require("api.labelTree");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader")],data:{members:biigle.$require("labelTrees.members"),roles:biigle.$require("labelTrees.roles"),defaultRole:biigle.$require("labelTrees.defaultRoleId"),userId:biigle.$require("labelTrees.userId")},components:{membersPanel:biigle.$require("core.components.membersPanel")},computed:{},methods:{attachMember:function(e){this.startLoading();var a=this;l.addUser({id:i.id},{id:e.id,role_id:e.role_id}).then(function(){a.memberAttached(e)},t.handleResponseError).finally(this.finishLoading)},memberAttached:function(e){this.members.push(e)},updateMember:function(e,a){this.startLoading();var r=this;l.updateUser({id:i.id,user_id:e.id},{role_id:a.role_id}).then(function(){r.memberUpdated(e,a)},t.handleResponseError).finally(this.finishLoading)},memberUpdated:function(e,t){e.role_id=t.role_id},removeMember:function(e){this.startLoading();var a=this;l.removeUser({id:i.id,user_id:e.id}).then(function(){a.memberRemoved(e)},t.handleResponseError).finally(this.finishLoading)},memberRemoved:function(e){for(var t=this.members.length-1;t>=0;t--)this.members[t].id===e.id&&this.members.splice(t,1)}}})}),biigle.$viewModel("label-trees-title",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.labelTree"),l=biigle.$require("labelTrees.privateVisibilityId"),a=biigle.$require("api.labelTree");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader"),biigle.$require("core.mixins.editor")],data:{labelTree:i,name:i.name,description:i.description,visibility_id:i.visibility_id},computed:{isPrivate:function(){return this.labelTree.visibility_id===l},hasDescription:function(){return!!this.description},isChanged:function(){return this.name!==this.labelTree.name||this.description!==this.labelTree.description||parseInt(this.visibility_id)!==this.labelTree.visibility_id}},methods:{discardChanges:function(){this.finishEditing(),this.name=this.labelTree.name,this.description=this.labelTree.description,this.visibility_id=this.labelTree.visibility_id},leaveTree:function(){confirm('Do you really want to revoke your membership of label tree "'+this.labelTree.name+'"?')&&(this.startLoading(),a.removeUser({id:this.labelTree.id,user_id:biigle.$require("labelTrees.userId")}).then(this.treeLeft,t.handleErrorResponse).finally(this.finishLoading))},treeLeft:function(){this.isPrivate?(t.success("You left the label tree. Redirecting..."),setTimeout(function(){location.href=biigle.$require("labelTrees.redirectUrl")},2e3)):location.reload()},deleteTree:function(){confirm("Do you really want to delete the label tree "+this.labelTree.name+"?")&&(this.startLoading(),a.delete({id:this.labelTree.id}).then(this.treeDeleted,t.handleErrorResponse).finally(this.finishLoading))},treeDeleted:function(){t.success("The label tree was deleted. Redirecting..."),setTimeout(function(){location.href=biigle.$require("labelTrees.redirectUrl")},2e3)},saveChanges:function(){this.startLoading(),a.update({id:this.labelTree.id},{name:this.name,description:this.description,visibility_id:this.visibility_id}).then(this.changesSaved,t.handleErrorResponse).finally(this.finishLoading)},changesSaved:function(){this.labelTree.name=this.name,this.labelTree.description=this.description,this.labelTree.visibility_id=parseInt(this.visibility_id),this.finishEditing()}}})}),biigle.$viewModel("merge-label-trees-container",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.baseTree"),l=biigle.$require("labelTrees.mergeTree"),a=biigle.$require("labelTrees.usedLabels"),r=biigle.$require("labelTrees.api.mergeLabelTrees");new Vue({el:e,mixins:[biigle.$require("core.mixins.loader")],components:{labelTreeDiff:biigle.$require("labelTrees.components.labelTreeDiff")},data:{baseTreeLabels:i.labels,mergeTreeLabels:l.labels,usedLabels:a,toAdd:[],toRemove:[],merged:!1},computed:{cannotMerge:function(){return this.loading||0===this.toAdd.length&&0===this.toRemove.length},disableDiff:function(){return this.loading||this.merged}},methods:{handleAdd:function(e){-1===this.toAdd.indexOf(e)&&this.toAdd.push(e)},handleRemove:function(e){-1===this.toRemove.indexOf(e)&&this.toRemove.push(e)},handleCancelAdd:function(e){var t=this.toAdd.indexOf(e);-1!==t&&this.toAdd.splice(t,1)},handleCancelRemove:function(e){var t=this.toRemove.indexOf(e);-1!==t&&this.toRemove.splice(t,1)},bundleToAdd:function(e){var t={};e.forEach(function(e){t[e.id]={name:e.name,color:e.color,parent_id:e.parent_id,left_parent_id:e.left_parent_id}});var i=[];return Object.keys(t).forEach(function(e){var l=t[e];l.parent_id&&t.hasOwnProperty(l.parent_id)?(t[l.parent_id].children?t[l.parent_id].children.push(l):t[l.parent_id].children=[l],delete l.parent_id,delete l.left_parent_id):(delete l.parent_id,l.left_parent_id&&(l.parent_id=l.left_parent_id),delete l.left_parent_id,i.push(l))}),i},bundleToRemove:function(e){return e.map(function(e){return e.id})},submitMerge:function(){this.startLoading();var e=this.bundleToAdd(this.toAdd),t=this.bundleToRemove(this.toRemove);r.save({id:i.id},{create:e,remove:t}).then(this.handleMergeSuccess,this.handleMergeError)},handleMergeError:function(e){this.finishLoading(),t.handleResponseError(e)},handleMergeSuccess:function(){this.merged=!0}}})}),biigle.$viewModel("merge-label-trees-index-container",function(e){var t=biigle.$require("labelTrees.mergeUrlTemplate");new Vue({el:e,components:{typeahead:biigle.$require("core.components.typeahead")},data:{mergeCandidates:[],typeaheadTemplate:'<span v-text="item.name"></span><br><small v-text="item.description"></small>',chosenCandidate:null},computed:{cannotContinue:function(){return null===this.chosenCandidate},continueUrl:function(){return this.chosenCandidate?t.replace(":id",this.chosenCandidate.id):""}},methods:{parseLabelTreeVersionedName:function(e){return e.version&&(e.name=e.name+" @ "+e.version.name),e},chooseCandidate:function(e){this.chosenCandidate=e}},created:function(){this.mergeCandidates=biigle.$require("labelTrees.mergeCandidates").map(this.parseLabelTreeVersionedName)}})}),biigle.$declare("labelTrees.randomColor",function(){var e=[0,.5,.9],t=[360,1,1],i=[0,2,2],l=function(e){var t,i=e[0]/60,l=Math.floor(i),a=i-l,r=[e[2]*(1-e[1]),e[2]*(1-e[1]*a),e[2]*(1-e[1]*(1-a))];switch(l){case 1:t=[r[1],e[2],r[0]];break;case 2:t=[r[0],e[2],r[2]];break;case 3:t=[r[0],r[1],e[2]];break;case 4:t=[r[2],r[0],e[2]];break;case 5:t=[e[2],r[0],r[1]];break;default:t=[e[2],r[2],r[0]]}return t.map(function(e){return Math.round(255*e)})},a=function(e){return e.map(function(e){return e=e.toString(16),1===e.length?"0"+e:e})};return function(){for(var r,s=[0,0,0],n=s.length-1;n>=0;n--)r=10*i[n],s[n]=(t[n]-e[n])*Math.random()+e[n],s[n]=0!==r?Math.round(s[n]*r)/r:Math.round(s[n]);return"#"+a(l(s)).join("")}}),biigle.$declare("labelTrees.api.mergeLabelTrees",Vue.resource("api/v1/label-trees{/id}/merge-labels")),biigle.$component("labelTrees.components.labelTree",{template:'<div class="label-tree"><h4 class="label-tree__title" v-if="showTitle"><button v-if="collapsible" @click.stop="collapse" class="btn btn-default btn-xs pull-right" :title="collapseTitle" type="button"><span v-if="collapsed" class="fa fa-chevron-down" aria-hidden="true"></span><span v-else class="fa fa-chevron-up" aria-hidden="true"></span></button>{{name}}</h4><ul v-if="!collapsed" class="label-tree__list"><label-tree-label :key="label.id" :label="label" :editable="editable" :show-favourites="showFavourites" :flat="flat" v-for="label in rootLabels" @select="emitSelect" @deselect="emitDeselect" @save="emitSave" @delete="emitDelete" @add-favourite="emitAddFavourite" @remove-favourite="emitRemoveFavourite"></label-tree-label><li v-if="hasNoLabels" class="text-muted">No labels</li></ul></div>',data:function(){return{collapsed:!1}},components:{labelTreeLabel:biigle.$require("labelTrees.components.labelTreeLabel")},props:{name:{type:String,required:!0},labels:{type:Array,required:!0},showTitle:{type:Boolean,default:!0},standalone:{type:Boolean,default:!1},collapsible:{type:Boolean,default:!0},multiselect:{type:Boolean,default:!1},allowSelectSiblings:{type:Boolean,default:!1},editable:{type:Boolean,default:!1},showFavourites:{type:Boolean,default:!1},flat:{type:Boolean,default:!1}},computed:{labelMap:function(){for(var e={},t=this.labels.length-1;t>=0;t--)e[this.labels[t].id]=this.labels[t];return e},compiledLabels:function(){var e={null:[]};return this.flat?this.labels.forEach(function(t){e[null].push(t)}):(this.labels.forEach(function(t){e.hasOwnProperty(t.parent_id)?e[t.parent_id].push(t):e[t.parent_id]=[t]}),this.labels.forEach(function(t){e.hasOwnProperty(t.id)?Vue.set(t,"children",e[t.id]):(Vue.set(t,"children",void 0),t.open=!1)})),e},rootLabels:function(){return this.compiledLabels[null]},collapseTitle:function(){return this.collapsed?"Expand":"Collapse"},hasNoLabels:function(){return 0===this.rootLabels.length}},methods:{hasLabel:function(e){return this.labelMap.hasOwnProperty(e)},getLabel:function(e){return this.labelMap[e]},getParents:function(e){for(var t=[];null!==e.parent_id;)e=this.getLabel(e.parent_id),t.unshift(e.id);return t},getSiblings:function(e){return null===e.parent_id?this.rootLabels:this.getLabel(e.parent_id).children},emitSelect:function(e,t){this.$emit("select",e,t)},emitDeselect:function(e,t){this.$emit("deselect",e,t)},emitSave:function(e,t){this.$emit("save",e,t)},emitDelete:function(e){this.$emit("delete",e)},selectLabel:function(e,t){this.multiselect||this.clearSelectedLabels(),e&&this.hasLabel(e.id)&&(e.selected=!0,this.collapsed=!1,this.flat||(this.getParents(e).forEach(function(e){this.getLabel(e).open=!0},this),this.multiselect&&this.allowSelectSiblings&&t.ctrlKey&&this.getSiblings(e).forEach(function(e){e.selected=!0})))},deselectLabel:function(e,t){this.hasLabel(e.id)&&(e.selected=!1,this.allowSelectSiblings&&t.ctrlKey&&this.getSiblings(e).forEach(function(e){e.selected=!1}))},clearSelectedLabels:function(){this.labels.forEach(function(e){e.selected=!1})},collapse:function(){if(this.collapsed)this.collapsed=!1;else{var e=!1;this.labels.forEach(function(t){e|=t.open,t.open=!1}),this.collapsed=!e}},emitAddFavourite:function(e){this.$emit("add-favourite",e)},emitRemoveFavourite:function(e){this.$emit("remove-favourite",e)},addFavouriteLabel:function(e){this.hasLabel(e.id)&&(e.favourite=!0)},removeFavouriteLabel:function(e){this.hasLabel(e.id)&&(e.favourite=!1)}},created:function(){this.labels.forEach(function(e){e.hasOwnProperty("open")||Vue.set(e,"open",!1),e.hasOwnProperty("selected")||Vue.set(e,"selected",!1),e.hasOwnProperty("favourite")||Vue.set(e,"favourite",!1)}),this.standalone?(this.$on("select",this.selectLabel),this.$on("deselect",this.deselectLabel)):(this.$parent.$on("select",this.selectLabel),this.$parent.$on("deselect",this.deselectLabel),this.$parent.$on("clear",this.clearSelectedLabels),this.$parent.$on("add-favourite",this.addFavouriteLabel),this.$parent.$on("remove-favourite",this.removeFavouriteLabel))}}),biigle.$component("labelTrees.components.labelTreeDiff",{template:'<div class="label-tree-diff"><div v-if="hasDiff"><button class="btn btn-default" title="Accept all merge items" :disabled="cannotResolveAll" @click="acceptAll" >Accept all</button> <button class="btn btn-default" title="Set all merge items as not accepted" :disabled="cannotResolveNone" @click="acceptNone" >Accept none</button></div><table v-if="hasDiff" class="table table-hover"><thead><tr><th></th><th v-text="leftName"></th><th v-text="rightName"></th></tr></thead><tbody><label-tree-diff-row v-for="item in diff" :item="item" :disabled="disabled" @accepted="handleResolved" ></label-tree-diff-row></tbody></table><div v-else class="text-center lead">The label trees are identical.</div></div>',components:{labelTreeDiffRow:biigle.$require("labelTrees.components.labelTreeDiffRow")},data:function(){return{diff:[]}},props:{leftLabels:{type:Array,required:!0},leftName:{type:String,default:""},rightLabels:{type:Array,required:!0},rightName:{type:String,default:""},usedLabels:{type:Array,default:[]},disabled:{type:Boolean,default:!1}},computed:{leftLabelsById:function(){var e={};return this.leftLabels.forEach(function(t){e[t.id]=t}),e},leftLabelsAsTree:function(){var e=this.generateChildMap(this.leftLabels);return this.generateLabelsAsTree(e[null],e)},rightLabelsAsTree:function(){var e=this.generateChildMap(this.rightLabels);return this.generateLabelsAsTree(e[null],e)},usedLabelMap:function(){var e={};return this.usedLabels.forEach(function(t){do{e[t]=null,t=this.leftLabelsById[t].parent_id}while(null!==t)},this),e},cannotResolveAll:function(){return this.disabled||this.diff.reduce(function(e,t){return t.acceptable?e&&t.accepted:e},!0)},cannotResolveNone:function(){return this.disabled||this.diff.reduce(function(e,t){return t.acceptable?e&&!t.accepted:e},!0)},hasDiff:function(){return this.diff.length>0}},methods:{generateChildMap:function(e){var t={};return e.forEach(function(e){t.hasOwnProperty(e.parent_id)?t[e.parent_id].push(e):t[e.parent_id]=[e]}),t},generateLabelsAsTree:function(e,t){return e.map(function(e){return t.hasOwnProperty(e.id)?e.children=this.generateLabelsAsTree(t[e.id],t):e.children=[],e},this).sort(function(e,t){return e.name+"-"+e.color<=t.name+"-"+t.color?-1:1})},generateTreeDiff:function(e,t,i,l){for(e=e.slice(),t=t.slice(),i=i||[],l=l||0;e.length>0&&t.length>0;){var a=e[0],r=t[0];a.name===r.name?(e.shift(),t.shift(),i.push({level:l,left:a,right:r}),this.generateTreeDiff(a.children,r.children,i,l+1)):a.name<r.name?(e.shift(),i.push({level:l,accepted:!1,acceptable:!this.usedLabelMap.hasOwnProperty(a.id),left:a,right:null}),this.generateTreeDiff(a.children,[],i,l+1)):(t.shift(),i.push({level:l,accepted:!1,acceptable:!0,left:null,right:r}),this.generateTreeDiff([],r.children,i,l+1))}return e.length>0&&e.forEach(function(e){i.push({level:l,accepted:!1,acceptable:!this.usedLabelMap.hasOwnProperty(e.id),left:e,right:null}),this.generateTreeDiff(e.children,[],i,l+1)},this),t.length>0&&t.forEach(function(e){i.push({level:l,accepted:!1,acceptable:!0,left:null,right:e}),this.generateTreeDiff([],e.children,i,l+1)},this),i},filterRelevantItems:function(e){var t=[];return e.forEach(function(e,i){null!==e.left&&null!==e.right||t.push(i)}),t.forEach(function(t){e[t].relevant=!0;for(var i=e[t].level,l=t;l>=0&&i>0;)e[l].level<i&&(e[l].relevant=!0,i=e[l].level),l-=1}),e.filter(function(e){return e.relevant})},handleResolved:function(e){e.acceptable&&(e.accepted?(this.cancelResolved(e),null===e.left?this.acceptCancelAddAllChildren(e):null===e.right&&this.acceptCancelDeleteAllParents(e)):(this.setResolved(e),null===e.left?this.acceptAddAllParents(e):null===e.right&&this.acceptDeleteAllChildren(e)))},cancelResolved:function(e){null===e.left?this.$emit("cancel-add",e.right):null===e.right&&this.$emit("cancel-remove",e.left),e.accepted=!1},setResolved:function(e){null===e.left?this.$emit("add",e.right):null===e.right&&this.$emit("remove",e.left),e.accepted=!0},acceptAll:function(){this.diff.forEach(function(e){e.accepted||this.handleResolved(e)},this)},acceptNone:function(){this.diff.forEach(function(e){e.accepted&&this.handleResolved(e)},this)},doForAllChildren:function(e,t){for(var i=e.level+1,l=this.diff.indexOf(e)+1;this.diff[l]&&this.diff[l].level>=i;)t.call(this,this.diff[l]),l+=1},doForAllParents:function(e,t){for(var i=e.level,l=this.diff.indexOf(e)-1;i>0&&l>=0;)this.diff[l].level<i&&(i=this.diff[l].level,t.call(this,this.diff[l])),l-=1},acceptDeleteAllChildren:function(e){this.doForAllChildren(e,function(e){null===e.right&&this.setResolved(e)})},acceptCancelAddAllChildren:function(e){this.doForAllChildren(e,function(e){null===e.left&&this.cancelResolved(e)})},acceptAddAllParents:function(e){this.doForAllParents(e,function(e){null===e.left&&this.setResolved(e)})},acceptCancelDeleteAllParents:function(e){this.doForAllParents(e,function(e){null===e.right&&this.cancelResolved(e)})},setLeftParentIds:function(e){var t={};return e.forEach(function(e){e.right&&e.left&&(t[e.right.id]=e.left.id)}),e.forEach(function(e){e.right&&e.right.parent_id&&(e.right.left_parent_id=t[e.right.parent_id])}),e}},created:function(){var e=this.generateTreeDiff(this.leftLabelsAsTree,this.rightLabelsAsTree);e=this.filterRelevantItems(e),e=this.setLeftParentIds(e),this.diff=e}}),biigle.$component("labelTrees.components.labelTreeDiffRow",{template:'<tr class="label-tree-diff-row" :class="classObject"><td class="label-tree-diff-row__button"><button v-if="labelToAdd" class="btn btn-sm btn-default" :class="addButtonClass" :disabled="disabled" title="Accept the addition" @click="emitResolved" ><i class="fa fa-plus"></i></button><button v-if="labelToRemove" class="btn btn-sm btn-default" :class="removeButtonClass" :title="removeTitle" @click="emitResolved" :disabled="!acceptable || disabled" ><i class="fa fa-minus"></i></button></td><td class="label-tree-diff-row__left"><div v-if="hasLeft" class="label-tree-label" :style="labelStyle"><div class="label-tree-label__name"><span class="label-tree-label__color" :style="leftColorStyle"></span><span v-text="leftLabel.name"></span></div></div><div v-if="labelAdded" class="label-tree-label" :style="labelStyle"><div class="label-tree-label__name"><span class="label-tree-label__color" :style="rightColorStyle"></span><span v-text="rightLabel.name"></span></div></div></td><td class="label-tree-diff-row__right"><div class="label-tree-label" :style="labelStyle"><div v-if="hasRight" class="label-tree-label__name"><span class="label-tree-label__color" :style="rightColorStyle"></span><span v-text="rightLabel.name"></span></div></div></td></tr>',data:function(){return{}},props:{item:{type:Object,required:!0},disabled:{type:Boolean,required:!1}},computed:{leftLabel:function(){return this.item.left},rightLabel:function(){return this.item.right},hasLeft:function(){return null!==this.leftLabel},hasRight:function(){return null!==this.rightLabel},labelToAdd:function(){return!this.hasLeft&&this.hasRight},labelToRemove:function(){return this.hasLeft&&!this.hasRight},labelsSame:function(){return this.hasLeft&&this.hasRight},leftColorStyle:function(){return{"background-color":"#"+this.leftLabel.color}},rightColorStyle:function(){return{"background-color":"#"+this.rightLabel.color}},classObject:function(){return{success:this.labelToAdd&&!this.accepted,"label-tree-diff-row--added":this.labelToAdd&&this.accepted,danger:this.labelToRemove&&!this.accepted,"label-tree-diff-row--removed":this.labelToRemove&&this.accepted}},labelStyle:function(){return{"padding-left":22*this.item.level+"px"}},addButtonClass:function(){return{"btn-success":this.accepted}},removeButtonClass:function(){return{"btn-danger":this.accepted}},accepted:function(){return this.item.accepted},acceptable:function(){return this.item.acceptable},labelAdded:function(){return this.labelToAdd&&this.accepted},removeTitle:function(){return this.acceptable?"Accept the deletion":"This label cannot be deleted because it or one of its child labels is used"}},methods:{emitResolved:function(){this.$emit("accepted",this.item)}}}),biigle.$component("labelTrees.components.labelTreeLabel",{name:"label-tree-label",template:'<li class="label-tree-label" :class="classObject"><div class="label-tree-label__name" @click="toggleOpen" @mouseover="doHover" @mouseleave="dontHover"><span v-if="editing"><input type="color" class="form-control input-sm label-tree-color-input" v-model="newColor" /> <input type="text" v-model="newName" v-on:keydown.enter="saveThis" class="form-control input-sm label-tree-label__name-input"></span><span v-else><span v-show="showColor" class="label-tree-label__color" :style="colorStyle"></span><span v-show="showChevronDown" class="label-tree-label__chevron label-tree-label__chevron--down" :style="chevronStyle"></span><span v-show="showChevronUp" class="label-tree-label__chevron label-tree-label__chevron--up" :style="chevronStyle"></span><span v-text="label.name" @click.stop="toggleSelect" @mouseenter="dontHover"></span></span><span class="label-tree-label__buttons"><button v-if="showFavourites" type="button" class="label-tree-label__favourite" :class="favouriteClass" @click.stop="toggleFavourite" :title="favouriteTitle"><span class="fa fa-star" aria-hidden="true" title=""></span></button><button v-if="editable && !editing" :title="editTitle" @click.stop="editThis"><span aria-hidden="true" class="fa fa-pencil-alt"></span></button><button v-if="editing" class="text-danger" :title="deleteTitle" @click.stop="deleteThis"><span aria-hidden="true" class="fa fa-trash"></span></button><button v-if="editing" title="Revert changes" @click.stop="revertThis"><span aria-hidden="true" class="fa fa-times"></span></button><button v-if="editing" class="text-success" title="Save changes" @click.stop="saveThis"><span aria-hidden="true" class="fa fa-check"></span></button></span></div><ul v-if="expandable && label.open" class="label-tree__list"><label-tree-label :key="child.id" :label="child" :editable="editable" :show-favourites="showFavourites" v-for="child in label.children" @select="emitSelect" @deselect="emitDeselect" @save="emitSave" @delete="emitDelete" @add-favourite="emitAddFavourite" @remove-favourite="emitRemoveFavourite"></label-tree-label></ul></li>',data:function(){return{hover:!1,editing:!1,oldName:"",oldColor:"",newName:"",newColor:""}},props:{label:{type:Object,required:!0},showFavourites:{type:Boolean,required:!1},editable:{type:Boolean,default:!1},flat:{type:Boolean,default:!1}},computed:{showColor:function(){return!this.expandable||!this.hover},showChevronUp:function(){return!this.showColor&&this.label.open},showChevronDown:function(){return!this.showColor&&!this.label.open},classObject:function(){return{"label-tree-label--selected":this.label.selected,"label-tree-label--expandable":this.expandable,"label-tree-label--editing":this.editing}},colorStyle:function(){return{"background-color":"#"+this.label.color}},chevronStyle:function(){return{color:"#"+this.label.color}},favouriteClass:function(){return{selected:this.label.favourite}},favouriteTitle:function(){return(this.label.favourite?"Remove":"Add")+" as favourite"},editTitle:function(){return"Edit label "+this.label.name},deleteTitle:function(){return"Remove label "+this.label.name},expandable:function(){return!this.flat&&!!this.label.children}},methods:{toggleSelect:function(e){this.editing||(e.preventDefault(),this.label.selected?this.$emit("deselect",this.label,e):this.$emit("select",this.label,e))},editThis:function(){this.editing=!0,this.oldName=this.label.name,this.oldColor=this.label.color,this.newName=this.label.name,this.newColor="#"+this.label.color},saveThis:function(){var e=this;this.label.name=this.newName,this.label.color=this.newColor.substr(1),this.editing=!1,this.oldName===this.label.name&&this.oldColor===this.label.color||this.emitSave(this.label,function(){e.editing=!0})},revertThis:function(){this.editing=!1,this.label.name=this.oldName,this.label.color=this.oldColor},deleteThis:function(){this.emitDelete(this.label)},toggleOpen:function(){this.editing||(this.expandable?this.label.open=!this.label.open:this.toggleSelect())},toggleFavourite:function(){this.label.favourite?this.emitRemoveFavourite(this.label):this.emitAddFavourite(this.label)},emitSelect:function(e,t){this.$emit("select",e,t)},emitDeselect:function(e,t){this.$emit("deselect",e,t)},emitDelete:function(e){this.$emit("delete",e)},emitSave:function(e,t){this.$emit("save",e,t)},emitAddFavourite:function(e){this.$emit("add-favourite",e)},emitRemoveFavourite:function(e){this.$emit("remove-favourite",e)},doHover:function(){this.hover=!0},dontHover:function(){this.hover=!1}}}),biigle.$component("labelTrees.components.labelTrees",{template:'<div class="label-trees"><div v-if="typeahead || clearable" class="label-trees__head"><button v-if="clearable" @click="clear" class="btn btn-default" title="Clear selected labels" type="button"><span class="fa fa-times fa-fw" aria-hidden="true"></span></button><typeahead v-if="typeahead" :items="labels" :template="typeaheadTemplate" @select="handleSelect" placeholder="Find label"></typeahead></div><div class="label-trees__body"><label-tree v-if="hasFavourites" name="Favourites" :labels="favourites" :show-favourites="showFavourites" :flat="true" :collapsible="collapsible" @select="handleSelect" @deselect="handleDeselect" @remove-favourite="handleRemoveFavourite"></label-tree><label-tree :name="tree.versionedName" :labels="tree.labels" :multiselect="multiselect" :allow-select-siblings="allowSelectSiblings" :show-favourites="showFavourites" :collapsible="collapsible" v-for="tree in trees" @select="handleSelect" @deselect="handleDeselect"  @add-favourite="handleAddFavourite" @remove-favourite="handleRemoveFavourite"></label-tree></div></div>',components:{typeahead:biigle.$require("labelTrees.components.labelTypeahead"),labelTree:biigle.$require("labelTrees.components.labelTree")},data:function(){return{favourites:[],typeaheadTemplate:'<span v-text="item.name"></span><br><small v-text="item.tree.versionedName"></small>'}},props:{trees:{type:Array,required:!0},id:{type:String},typeahead:{type:Boolean,default:!0},clearable:{type:Boolean,default:!0},multiselect:{type:Boolean,default:!1},allowSelectSiblings:{type:Boolean,default:!1},showFavourites:{type:Boolean,default:!1},collapsible:{type:Boolean,default:!0},listenerSet:{type:String,default:"default"}},computed:{localeCompareSupportsLocales:function(){try{"foo".localeCompare("bar","i")}catch(e){return"RangeError"===e.name}return!1},labels:function(){var e=[];if(this.trees.forEach(function(t){Array.prototype.push.apply(e,t.labels)}),this.localeCompareSupportsLocales){var t=new Intl.Collator(void 0,{numeric:!0,sensitivity:"base"});e.sort(function(e,i){return t.compare(e.name,i.name)})}else e.sort(function(e,t){return e.name<t.name?-1:1});return e},favouriteIds:function(){return this.favourites.map(function(e){return e.id})},canHaveMoreFavourites:function(){return this.favourites.length<10},hasFavourites:function(){return this.favourites.length>0},ownId:function(){if(this.id)return this.id;var e=[];for(var t in this.trees)this.trees.hasOwnProperty(t)&&e.push(this.trees[t].id);return e.join("-")},favouriteStorageKey:function(){return"biigle.label-trees."+this.ownId+".favourites"}},
methods:{handleSelect:function(e,t){e&&this.$emit("select",e,t)},handleDeselect:function(e,t){this.$emit("deselect",e,t)},clear:function(){this.$emit("clear")},handleAddFavourite:function(e){this.canHaveMoreFavourites&&(this.$emit("add-favourite",e),this.favourites.push(e),this.updateFavouriteStorage())},handleRemoveFavourite:function(e){this.$emit("remove-favourite",e);var t=this.favourites.indexOf(e);-1!==t&&this.favourites.splice(t,1),this.updateFavouriteStorage()},updateFavouriteStorage:function(){this.hasFavourites?localStorage.setItem(this.favouriteStorageKey,JSON.stringify(this.favouriteIds)):localStorage.removeItem(this.favouriteStorageKey)},selectFavourite:function(e){this.favourites[e]&&this.handleSelect(this.favourites[e])}},watch:{trees:{immediate:!0,handler:function(e){e.forEach(function(e){e.version?e.versionedName=e.name+" @ "+e.version.name:e.versionedName=e.name,e.labels.forEach(function(t){t.tree=e})},this)}}},mounted:function(){if(this.showFavourites){var e=JSON.parse(localStorage.getItem(this.favouriteStorageKey));if(e){var t=[];this.labels.forEach(function(i){var l=e.indexOf(i.id);-1!==l&&(t[l]=i)}),t.filter(Boolean).forEach(function(e){this.handleAddFavourite(e)},this)}for(var i=biigle.$require("keyboard"),l=this,a=function(e,t){i.on(e,function(){l.selectFavourite(t)},0,l.listenerSet)},r=1;r<=9;r++)a(r.toString(),r-1);a("0",9)}}}),biigle.$component("labelTrees.components.labelTypeahead",{mixins:[biigle.$require("core.components.typeahead")],props:{template:{default:'<span class="label-typeahead-item"><span v-if="item.color" :style="{\'background-color\': \'#\' + item.color}" class="label-color"></span><span v-text="item.name"></span></span>'}}}),biigle.$component("labelTrees.components.manualLabelForm",{mixins:[biigle.$require("labelTrees.mixins.labelFormComponent")],methods:{submit:function(){var e={name:this.selectedName,color:this.selectedColor};this.parent&&(e.parent_id=this.parent.id),this.$emit("submit",e)}}}),biigle.$component("labelTrees.components.wormsLabelForm",{mixins:[biigle.$require("labelTrees.mixins.labelFormComponent")],components:{wormsResultItem:biigle.$require("labelTrees.components.wormsResultItem")},data:function(){return{results:[],recursive:!1,hasSearched:!1,unaccepted:!1}},computed:{hasResults:function(){return this.results.length>0},recursiveButtonClass:function(){return{active:this.recursive,"btn-info":this.recursive}},unacceptedButtonClass:function(){return{active:this.unaccepted,"btn-info":this.unaccepted}}},methods:{findName:function(){var e=biigle.$require("labelTrees.wormsLabelSource"),t=biigle.$require("api.labelSource"),i=biigle.$require("messages.store"),l=this;this.$emit("load-start");var a={id:e.id,query:this.selectedName};this.unaccepted&&(a.unaccepted="true"),t.query(a).then(this.updateResults,i.handleErrorResponse).finally(function(){l.hasSearched=!0,l.$emit("load-finish")})},updateResults:function(e){this.results=e.data},importItem:function(e){var t=biigle.$require("labelTrees.wormsLabelSource"),i={name:e.name,color:this.selectedColor,source_id:e.aphia_id,label_source_id:t.id};this.recursive?i.recursive="true":this.parent&&(i.parent_id=this.parent.id),this.$emit("submit",i)},toggleRecursive:function(){this.recursive=!this.recursive},toggleUnaccepted:function(){this.unaccepted=!this.unaccepted}}}),biigle.$component("labelTrees.components.wormsResultItem",{props:{item:{type:Object,required:!0},recursive:{type:Boolean,required:!0},labels:{type:Array,required:!0},parent:{type:Object,default:null}},computed:{classification:function(){return this.item.parents.join(" > ")},buttonTitle:function(){return this.recursive?"Add "+this.item.name+" and all WoRMS parents as new labels":this.parent?"Add "+this.item.name+" as a child of "+this.parent.name:"Add "+this.item.name+" as a root label"},classObject:function(){return{"list-group-item-success":this.selected}},selected:function(){var e=this;return!!this.labels.find(function(t){return t.source_id==e.item.aphia_id})}},methods:{select:function(){this.selected||this.$emit("select",this.item)}}}),biigle.$component("labelTrees.mixins.labelFormComponent",{props:{labels:{type:Array,required:!0},color:{type:String,default:""},parent:{type:Object,default:null},name:{type:String,default:""}},components:{typeahead:biigle.$require("labelTrees.components.labelTypeahead")},computed:{selectedColor:{get:function(){return this.color},set:function(e){this.$emit("color",e)}},selectedName:{get:function(){return this.name},set:function(e){this.$emit("name",e)}},selectedParent:function(){return this.parent?this.parent.name:""},hasNoLabels:function(){return 0===this.labels.length},hasNoParent:function(){return!this.parent},hasNoName:function(){return!this.name}},methods:{refreshColor:function(){this.selectedColor=biigle.$require("labelTrees.randomColor")()},resetParent:function(){this.$emit("parent",null)},selectLabel:function(e){this.$emit("parent",e)}}});