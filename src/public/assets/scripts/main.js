angular.module("biigle.label-trees",["biigle.api","biigle.ui"]),angular.module("biigle.label-trees").config(["$compileProvider",function(e){"use strict";e.debugInfoEnabled(!1)}]),biigle.$viewModel("label-trees-authorized-projects",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("api.projects"),l=biigle.$require("api.labelTree"),r=biigle.$require("labelTrees.privateVisibilityId");new Vue({el:e,mixins:[biigle.$require("labelTrees.mixins.loader"),biigle.$require("labelTrees.mixins.editor")],data:{labelTree:biigle.$require("labelTrees.labelTree"),ownProjects:[],authorizedProjects:biigle.$require("labelTrees.authorizedProjects"),authorizedOwnProjects:biigle.$require("labelTrees.authorizedOwnProjects")},components:{typeahead:biigle.$require("labelTrees.components.typeahead")},computed:{isPrivate:function(){return this.labelTree.visibility_id===r},classObject:function(){return{"panel-warning":this.editing}},authorizableProjects:function(){var e=this;return this.ownProjects.filter(function(t){for(var i=e.authorizedProjects.length-1;i>=0;i--)if(e.authorizedProjects[i].id===t.id)return!1;return!0})},hasAuthorizedProjects:function(){return this.authorizedProjects.length>0}},methods:{fetchOwnProjects:function(){var e=this;i.query().then(function(t){Vue.set(e,"ownProjects",t.body)},t.handleErrorResponse)},addAuthorizedProject:function(e){var i=this;this.startLoading(),l.addAuthorizedProject({id:this.labelTree.id},{id:e.id}).then(function(){i.authorizedProjectAdded(e)},t.handleErrorResponse).finally(this.finishLoading)},authorizedProjectAdded:function(e){this.authorizedProjects.push(e),this.authorizedOwnProjects.push(e.id)},removeAuthorizedProject:function(e){var i=this;this.startLoading(),l.removeAuthorizedProject({id:this.labelTree.id,project_id:e.id}).then(function(){i.authorizedProjectRemoved(e)},t.handleErrorResponse).finally(this.finishLoading)},authorizedProjectRemoved:function(e){var t;for(t=this.authorizedProjects.length-1;t>=0;t--)this.authorizedProjects[t].id===e.id&&this.authorizedProjects.splice(t,1);t=this.authorizedOwnProjects.indexOf(e.id),t!==-1&&this.authorizedOwnProjects.splice(t,1)},isOwnProject:function(e){return this.authorizedOwnProjects.indexOf(e.id)!==-1}},created:function(){this.$once("editing.start",this.fetchOwnProjects)}})}),biigle.$viewModel("label-trees-labels",function(e){var t=biigle.$require("api.labels"),i=biigle.$require("messages.store"),l=biigle.$require("labelTrees.randomColor"),r=biigle.$require("labelTrees.labelTree");new Vue({el:e,mixins:[biigle.$require("labelTrees.mixins.loader"),biigle.$require("labelTrees.mixins.editor")],data:{labels:biigle.$require("labelTrees.labels"),selectedColor:l(),selectedLabel:null,selectedName:""},components:{tabs:VueStrap.tabs,tab:VueStrap.tab,labelTree:biigle.$require("labelTrees.components.labelTree"),manualLabelForm:biigle.$require("labelTrees.components.manualLabelForm"),wormsLabelForm:biigle.$require("labelTrees.components.wormsLabelForm")},computed:{classObject:function(){return{"panel-warning":this.editing}}},methods:{deleteLabel:function(e){var l=this;this.startLoading(),t.delete({id:e.id}).then(function(){l.labelDeleted(e)},i.handleErrorResponse).finally(this.finishLoading)},labelDeleted:function(e){this.selectedLabel&&this.selectedLabel.id===e.id&&this.deselectLabel(e);for(var t=this.labels.length-1;t>=0;t--)if(this.labels[t].id===e.id){this.labels.splice(t,1);break}},selectLabel:function(e){this.selectedLabel=e,e?(this.selectedColor="#"+e.color,this.$emit("select",e)):this.$emit("clear")},deselectLabel:function(e){this.selectedLabel=null,this.$emit("deselect",e)},selectColor:function(e){this.selectedColor=e},selectName:function(e){this.selectedName=e},insertLabel:function(e){Vue.set(e,"open",!1),Vue.set(e,"selected",!1);for(var t=e.name.toLowerCase(),i=0,l=this.labels.length;i<l;i++)if(this.labels[i].name.toLowerCase()>=t)return void this.labels.splice(i,0,e);this.labels.push(e)},createLabel:function(e){this.loading||(this.startLoading(),t.save({label_tree_id:r.id},e).then(this.labelCreated,i.handleErrorResponse).finally(this.finishLoading))},labelCreated:function(e){e.data.forEach(this.insertLabel),this.selectedColor=l(),this.selectedName=""}}})}),biigle.$viewModel("label-trees-title",function(e){var t=biigle.$require("messages.store"),i=biigle.$require("labelTrees.labelTree"),l=biigle.$require("labelTrees.privateVisibilityId"),r=biigle.$require("api.labelTreeUser"),s=biigle.$require("api.labelTree");new Vue({el:e,mixins:[biigle.$require("labelTrees.mixins.loader"),biigle.$require("labelTrees.mixins.editor")],data:{labelTree:i,name:i.name,description:i.description,visibility_id:i.visibility_id},computed:{isPrivate:function(){return this.labelTree.visibility_id===l},hasDescription:function(){return!!this.description.length},isChanged:function(){return this.name!==this.labelTree.name||this.description!==this.labelTree.description||parseInt(this.visibility_id)!==this.labelTree.visibility_id}},methods:{discardChanges:function(){this.finishEditing(),this.name=this.labelTree.name,this.description=this.labelTree.description,this.visibility_id=this.labelTree.visibility_id},leaveTree:function(){var e=confirm("Do you really want to leave the label tree "+this.labelTree.name+"?");e&&(this.startLoading(),r.delete({label_tree_id:this.labelTree.id,id:biigle.$require("labelTrees.userId")}).then(this.treeLeft,t.handleErrorResponse).finally(this.finishLoading))},treeLeft:function(){this.isPrivate?(t.success("You left the label tree. Redirecting..."),setTimeout(function(){location.href=biigle.$require("labelTrees.redirectUrl")},2e3)):location.reload()},deleteTree:function(){var e=confirm("Do you really want to delete the label tree "+this.labelTree.name+"?");e&&(this.startLoading(),s.delete({id:this.labelTree.id}).then(this.treeDeleted,t.handleErrorResponse).finally(this.finishLoading))},treeDeleted:function(){t.success("The label tree was deleted. Redirecting..."),setTimeout(function(){location.href=biigle.$require("labelTrees.redirectUrl")},2e3)},saveChanges:function(){this.startLoading(),s.update({id:this.labelTree.id},{name:this.name,description:this.description,visibility_id:this.visibility_id}).then(this.changesSaved,t.handleErrorResponse).finally(this.finishLoading)},changesSaved:function(){this.labelTree.name=this.name,this.labelTree.description=this.description,this.labelTree.visibility_id=parseInt(this.visibility_id),this.finishEditing()}}})}),biigle.$declare("labelTrees.randomColor",function(){var e=[0,.5,.9],t=[360,1,1],i=[0,2,2],l=function(e){var t,i=e[0]/60,l=Math.floor(i),r=i-l,s=[e[2]*(1-e[1]),e[2]*(1-e[1]*r),e[2]*(1-e[1]*(1-r))];switch(l){case 1:t=[s[1],e[2],s[0]];break;case 2:t=[s[0],e[2],s[2]];break;case 3:t=[s[0],s[1],e[2]];break;case 4:t=[s[2],s[0],e[2]];break;case 5:t=[e[2],s[0],s[1]];break;default:t=[e[2],s[2],s[0]]}return t.map(function(e){return Math.round(255*e)})},r=function(e){return e.map(function(e){return e=e.toString(16),1===e.length?"0"+e:e})};return function(){for(var s,a=[0,0,0],n=a.length-1;n>=0;n--)s=10*i[n],a[n]=(t[n]-e[n])*Math.random()+e[n],0!==s?a[n]=Math.round(a[n]*s)/s:a[n]=Math.round(a[n]);return"#"+r(l(a)).join("")}}),angular.module("biigle.label-trees").controller("MembersController",["$scope","LABEL_TREE","MEMBERS","ROLES","DEFAULT_ROLE_ID","USER_ID","LabelTreeUser","msg","User",function(e,t,i,l,r,s,a,n,o){"use strict";var c=!1,d=!1;e.newMember={user:null,role_id:r.toString()};var u=function(e){n.responseError(e),d=!1},h=function(e){e.role_id=parseInt(e.tmp_role_id),d=!1},b=function(e,t){e.tmp_role_id=e.role_id.toString(),u(t)},p=function(e){for(var t=i.length-1;t>=0;t--)if(i[t].id===e.id){i.splice(t,1);break}d=!1},m=function(e){for(var t=i.length-1;t>=0;t--)if(i[t].id===e.id)return!1;return!0},f=function(e){return e.filter(m)},g=function(t){t.tmp_role_id=t.role_id.toString(),i.push(t),e.newMember.user=null,d=!1};e.isEditing=function(){return c},e.toggleEditing=function(){c=!c},e.isLoading=function(){return d},e.getMembers=function(){return i},e.hasMembers=function(){return i.length>0},e.getRoles=function(){return l},e.getRole=function(e){return l[e]},e.isOwnUser=function(e){return s===e.id},e.updateRole=function(e){d=!0,a.update({label_tree_id:t.id},{id:e.id,role_id:parseInt(e.tmp_role_id)},function(){h(e)},function(t){b(e,t)})},e.detachMember=function(e){d=!0,a.detach({label_tree_id:t.id},{id:e.id},function(){p(e)},u)},e.username=function(e){return e&&e.firstname&&e.lastname?e.firstname+" "+e.lastname:""},e.findUser=function(e){return o.find({query:encodeURIComponent(e)}).$promise.then(f)},e.newMemberValid=function(){return e.newMember.user&&void 0!==e.newMember.user.id&&m(e.newMember.user)&&null!==e.newMember.role_id},e.attachMember=function(){if(e.newMemberValid()){d=!0;var i=e.newMember.user;i.role_id=parseInt(e.newMember.role_id),a.attach({label_tree_id:t.id},{id:i.id,role_id:i.role_id},function(){g(i)},u)}};for(var v=i.length-1;v>=0;v--)i[v].tmp_role_id=i[v].role_id.toString()}]),biigle.$declare("api.labelSource",Vue.resource("/api/v1/label-sources{/id}/find")),biigle.$declare("api.labelTree",Vue.resource("/api/v1/label-trees{/id}",{},{addAuthorizedProject:{method:"POST",url:"/api/v1/label-trees{/id}/authorized-projects"},removeAuthorizedProject:{method:"DELETE",url:"/api/v1/label-trees{/id}/authorized-projects{/project_id}"}})),biigle.$declare("api.labelTreeUser",Vue.resource("/api/v1/label-trees{/label_tree_id}/users{/id}")),biigle.$declare("api.labels",Vue.resource("/api/v1/labels{/id}",{},{save:{method:"POST",url:"/api/v1/label-trees{/label_tree_id}/labels"}})),biigle.$declare("api.projects",Vue.resource("/api/v1/projects{/id}",{},{query:{url:"/api/v1/projects/my"}})),biigle.$component("labelTrees.components.labelTree",{template:'<div class="label-tree"><h4 class="label-tree__title" v-if="showTitle"><button v-if="collapsible" @click.stop="collapse" class="btn btn-default btn-xs pull-right" :title="collapseTitle"><span v-if="collapsed" class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span><span v-else class="glyphicon glyphicon-chevron-up" aria-hidden="true"></span></button>{{name}}</h4><ul v-if="!collapsed" class="label-tree__list"><label-tree-label :label="label" :deletable="deletable" v-for="label in rootLabels" @select="emitSelect" @deselect="emitDeselect" @delete="emitDelete"></label-tree-label></ul></div>',data:function(){return{collapsed:!1}},components:{labelTreeLabel:biigle.$require("labelTrees.components.labelTreeLabel")},props:{name:{type:String,required:!0},labels:{type:Array,required:!0},showTitle:{type:Boolean,default:!0},standalone:{type:Boolean,default:!1},collapsible:{type:Boolean,default:!0},multiselect:{type:Boolean,default:!1},deletable:{type:Boolean,default:!1}},computed:{labelMap:function(){for(var e={},t=this.labels.length-1;t>=0;t--)e[this.labels[t].id]=this.labels[t];return e},compiledLabels:function(){for(var e,t={},i=0,l=this.labels.length;i<l;i++)e=this.labels[i].parent_id,t.hasOwnProperty(e)?t[e].push(this.labels[i]):t[e]=[this.labels[i]];for(i=this.labels.length-1;i>=0;i--)t.hasOwnProperty(this.labels[i].id)?Vue.set(this.labels[i],"children",t[this.labels[i].id]):(Vue.set(this.labels[i],"children",void 0),this.labels[i].open=!1);return t},rootLabels:function(){return this.compiledLabels[null]},collapseTitle:function(){return this.collapsed?"Expand":"Collapse"}},methods:{hasLabel:function(e){return this.labelMap.hasOwnProperty(e)},getLabel:function(e){return this.labelMap[e]},getParents:function(e){for(var t=[];null!==e.parent_id;)e=this.getLabel(e.parent_id),t.unshift(e.id);return t},emitSelect:function(e){this.$emit("select",e)},emitDeselect:function(e){this.$emit("deselect",e)},emitDelete:function(e){this.$emit("delete",e)},selectLabel:function(e){if(this.multiselect||this.clearSelectedLabels(),this.hasLabel(e.id)){e.selected=!0,this.collapsed=!1;for(var t=this.getParents(e),i=t.length-1;i>=0;i--)this.getLabel(t[i]).open=!0}},deselectLabel:function(e){this.hasLabel(e.id)&&(e.selected=!1)},clearSelectedLabels:function(){for(var e=this.labels.length-1;e>=0;e--)this.labels[e].selected=!1},collapse:function(){this.collapsed=!this.collapsed}},created:function(){for(i=this.labels.length-1;i>=0;i--)Vue.set(this.labels[i],"open",!1),Vue.set(this.labels[i],"selected",!1);this.standalone?(this.$on("select",this.selectLabel),this.$on("deselect",this.deselectLabel)):(this.$parent.$on("select",this.selectLabel),this.$parent.$on("deselect",this.deselectLabel),this.$parent.$on("clear",this.clearSelectedLabels))}}),biigle.$component("labelTrees.components.labelTreeLabel",{name:"label-tree-label",template:'<li class="label-tree-label cf" :class="classObject"><div class="label-tree-label__name" @click="toggleOpen"><span class="label-tree-label__color" :style="colorStyle"></span><span v-text="label.name" @click.stop="toggleSelect"></span><span v-if="showFavourite" class="label-tree-label__favourite" @click.stop="toggleFavourite"><span class="glyphicon" :class="favouriteClass" aria-hidden="true" title=""></span></span><button v-if="deletable" type="button" class="close label-tree-label__delete" :title="deleteTitle" @click.stop="deleteThis"><span aria-hidden="true">&times;</span></button></div><ul v-if="label.open" class="label-tree__list"><label-tree-label :label="child" :deletable="deletable" v-for="child in label.children" @select="emitSelect" @deselect="emitDeselect" @delete="emitDelete"></label-tree-label></ul></li>',data:function(){return{favourite:!1}},props:{label:{type:Object,required:!0},showFavourite:{type:Boolean,required:!1},deletable:{type:Boolean,default:!1}},computed:{classObject:function(){return{"label-tree-label--selected":this.label.selected,"label-tree-label--expandable":this.label.children}},colorStyle:function(){return{"background-color":"#"+this.label.color}},favouriteClass:function(){return{"glyphicon-star-empty":!this.favourite,"glyphicon-star":this.favourite}},deleteTitle:function(){return"Remove label "+this.label.name}},methods:{toggleSelect:function(){this.label.selected?this.$emit("deselect",this.label):this.$emit("select",this.label)},deleteThis:function(){this.emitDelete(this.label)},toggleOpen:function(){this.label.children?this.label.open=!this.label.open:this.toggleSelect()},toggleFavourite:function(){this.favourite=!this.favourite},emitSelect:function(e){this.$emit("select",e)},emitDeselect:function(e){this.$emit("deselect",e)},emitDelete:function(e){this.$emit("delete",e)}}}),biigle.$component("labelTrees.components.labelTrees",{template:'<div class="label-trees"><div v-if="typeahead || clearable" class="label-trees__head"><button v-if="clearable" @click="clear" class="btn btn-default" title="Clear selected labels"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></button><typeahead v-if="typeahead" :items="labels" @select="handleSelect" placeholder="Label name"></typeahead></div><div class="label-trees__body"><label-tree :name="tree.name" :labels="tree.labels" :multiselect="multiselect" v-for="tree in trees" @select="handleSelect" @deselect="handleDeselect"></label-tree></div></div>',components:{typeahead:biigle.$require("labelTrees.components.typeahead"),labelTree:biigle.$require("labelTrees.components.labelTree")},props:{trees:{type:Array,required:!0},typeahead:{type:Boolean,default:!0},clearable:{type:Boolean,default:!0},multiselect:{type:Boolean,default:!1}},computed:{labels:function(){for(var e=[],t=this.trees.length-1;t>=0;t--)Array.prototype.push.apply(e,this.trees[t].labels);return e}},methods:{handleSelect:function(e){this.$emit("select",e)},handleDeselect:function(e){this.$emit("deselect",e)},clear:function(){this.$emit("clear")}}}),biigle.$component("labelTrees.components.loader",{template:'<span class="loader" :class="{\'loader--active\': active}"></span>',props:{active:{type:Boolean,required:!0}}}),biigle.$component("labelTrees.components.manualLabelForm",{mixins:[biigle.$require("labelTrees.mixins.labelFormComponent")],methods:{submit:function(){var e={name:this.selectedName,color:this.selectedColor};this.parent&&(e.parent_id=this.parent.id),this.$emit("submit",e)}}}),biigle.$component("labelTrees.components.typeahead",{template:'<typeahead class="typeahead clearfix" :data="items" :placeholder="placeholder" :on-hit="selectItem" :template="template" :disabled="disabled" :value="value" match-property="name"></typeahead>',data:function(){return{template:"{{item.name}}"}},components:{typeahead:VueStrap.typeahead},props:{items:{type:Array,required:!0},placeholder:{type:String,default:"Item name"},disabled:{type:Boolean,default:!1},value:{type:String,default:""}},methods:{selectItem:function(e,t){e&&(this.$emit("select",e),t.reset())}}}),biigle.$component("labelTrees.components.wormsLabelForm",{mixins:[biigle.$require("labelTrees.mixins.labelFormComponent")],components:{wormsResultItem:biigle.$require("labelTrees.components.wormsResultItem")},data:function(){return{results:[],recursive:!1,hasSearched:!1}},computed:{hasResults:function(){return this.results.length>0},recursiveButtonClass:function(){return{active:this.recursive,"btn-primary":this.recursive}}},methods:{findName:function(){var e=biigle.$require("labelTrees.wormsLabelSource"),t=biigle.$require("api.labelSource"),i=biigle.$require("messages.store"),l=this;this.$emit("load-start"),t.query({id:e.id,query:this.selectedName}).then(this.updateResults,i.handleErrorResponse).finally(function(){l.hasSearched=!0,l.$emit("load-finish")})},updateResults:function(e){this.results=e.data},importItem:function(e){var t=biigle.$require("labelTrees.wormsLabelSource"),i={name:e.name,color:this.selectedColor,source_id:e.aphia_id,label_source_id:t.id};this.recursive?i.recursive="true":this.parent&&(i.parent_id=this.parent.id),this.$emit("submit",i)},toggleRecursive:function(){this.recursive=!this.recursive}}}),biigle.$component("labelTrees.components.wormsResultItem",{props:{item:{type:Object,required:!0},recursive:{type:Boolean,required:!0},labels:{type:Array,required:!0},parent:{type:Object,default:null}},computed:{classification:function(){return this.item.parents.join(" > ")},buttonTitle:function(){return this.recursive?"Add "+this.item.name+" and all WoRMS parents as new labels":this.parent?"Add "+this.item.name+" as a child of "+this.parent.name:"Add "+this.item.name+" as a root label"},classObject:function(){return{"list-group-item-success":this.selected}},selected:function(){var e=this;return!!this.labels.find(function(t){return t.source_id==e.item.aphia_id})}},methods:{select:function(){this.selected||this.$emit("select",this.item)}}}),biigle.$component("labelTrees.mixins.editor",{data:{editing:!1},methods:{startEditing:function(){this.editing=!0,this.$emit("editing.start")},finishEditing:function(){this.editing=!1,this.$emit("editing.stop")},toggleEditing:function(){this.editing?this.finishEditing():this.startEditing()}}}),biigle.$component("labelTrees.mixins.labelFormComponent",{props:{labels:{type:Array,required:!0},color:{type:String,default:""},parent:{type:Object,default:null},name:{type:String,default:""}},components:{typeahead:biigle.$require("labelTrees.components.typeahead")},computed:{selectedColor:{get:function(){return this.color},set:function(e){this.$emit("color",e)}},selectedName:{get:function(){return this.name},set:function(e){this.$emit("name",e)}},selectedParent:function(){return this.parent?this.parent.name:""},hasNoLabels:function(){return 0===this.labels.length},hasNoParent:function(){return!this.parent},hasNoName:function(){return!this.name}},methods:{refreshColor:function(){this.selectedColor=biigle.$require("labelTrees.randomColor")()},resetParent:function(){this.$emit("parent",null)},selectLabel:function(e){this.$emit("parent",e)}}}),biigle.$component("labelTrees.mixins.loader",{components:{loader:biigle.$require("labelTrees.components.loader")},data:{loading:!1},methods:{startLoading:function(){this.loading=!0},finishLoading:function(){this.loading=!1}}});